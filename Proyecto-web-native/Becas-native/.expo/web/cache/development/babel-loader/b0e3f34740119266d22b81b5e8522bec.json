{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar APIBECAS_URL = \"http://192.168.10.44:80/api/beca/\";\nexport default function GetAllBecas() {\n  var respuesta, data;\n  return _regeneratorRuntime.async(function GetAllBecas$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"\" + APIBECAS_URL));\n\n        case 3:\n          respuesta = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(respuesta.json());\n\n        case 6:\n          data = _context.sent;\n          return _context.abrupt(\"return\", data.becas);\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](0);\n          window.alert(_context.t0);\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 10]], Promise);\n}\nexport function registerBecas(newBeca) {\n  return _regeneratorRuntime.async(function registerBecas$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(fetch(APIBECAS_URL, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              \"nombre\": String(newBeca.nombre),\n              \"porcentaje\": newBeca.porcentaje,\n              \"pais\": String(newBeca.pais),\n              \"universidad\": String(newBeca.universidad),\n              \"requerimientos\": String(newBeca.requerimientos)\n            })\n          }));\n\n        case 2:\n          return _context2.abrupt(\"return\", _context2.sent);\n\n        case 3:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function updateBecas(becaId, updatedBeca) {\n  return _regeneratorRuntime.async(function updateBecas$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regeneratorRuntime.awrap(fetch(\"\" + APIBECAS_URL + becaId, {\n            method: 'PUT',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              \"nombre\": String(updatedBeca.nombre),\n              \"porcentaje\": parseInt(updatedBeca.porcentaje),\n              \"pais\": String(updatedBeca.pais),\n              \"universidad\": String(updatedBeca.universidad),\n              \"requerimientos\": String(updatedBeca.requerimientos)\n            })\n          }));\n\n        case 2:\n          return _context3.abrupt(\"return\", _context3.sent);\n\n        case 3:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function DelteBecas(becaId) {\n  return _regeneratorRuntime.async(function DelteBecas$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return _regeneratorRuntime.awrap(fetch(\"\" + APIBECAS_URL + becaId, {\n            method: 'DELETE'\n          }));\n\n        case 2:\n          return _context4.abrupt(\"return\", _context4.sent);\n\n        case 3:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function getBecas(becaId) {\n  return _regeneratorRuntime.async(function getBecas$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return _regeneratorRuntime.awrap(fetch(\"\" + APIBECAS_URL + becaId));\n\n        case 2:\n          return _context5.abrupt(\"return\", _context5.sent);\n\n        case 3:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"names":["APIBECAS_URL","GetAllBecas","fetch","respuesta","json","data","becas","window","alert","registerBecas","newBeca","method","headers","body","JSON","stringify","String","nombre","porcentaje","pais","universidad","requerimientos","updateBecas","becaId","updatedBeca","parseInt","DelteBecas","getBecas"],"sources":["D:/Programacion/Proyecto-web-native/Becas-native/Funciones/BackBecas.js"],"sourcesContent":["const APIBECAS_URL = \"http://192.168.10.44:80/api/beca/\";\r\n\r\n\r\n\r\n\r\nexport default async function GetAllBecas(){\r\n    try{\r\n        const respuesta = await fetch(`${APIBECAS_URL}`);\r\n        const data = await respuesta.json();\r\n        //console.log(data.becas);\r\n        return data.becas;\r\n    }catch(error){\r\n        window.alert(error);\r\n    }\r\n}\r\n\r\nexport async function registerBecas(newBeca){\r\n    return await fetch(APIBECAS_URL, {\r\n        method: 'POST',\r\n        headers:{\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            \"nombre\": String(newBeca.nombre),\r\n            \"porcentaje\":(newBeca.porcentaje),\r\n            \"pais\": String(newBeca.pais),\r\n            \"universidad\": String(newBeca.universidad),\r\n            \"requerimientos\": String(newBeca.requerimientos),\r\n        })\r\n    } );\r\n\r\n}\r\n\r\nexport async function updateBecas(becaId,updatedBeca){\r\n    return await fetch(`${APIBECAS_URL}${becaId}`, {\r\n        method: 'PUT',\r\n        headers:{\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            \"nombre\": String(updatedBeca.nombre),\r\n            \"porcentaje\": parseInt(updatedBeca.porcentaje),\r\n            \"pais\": String(updatedBeca.pais),\r\n            \"universidad\": String(updatedBeca.universidad),\r\n            \"requerimientos\": String(updatedBeca.requerimientos),\r\n        })\r\n    } );\r\n\r\n}\r\n\r\nexport async function DelteBecas(becaId){\r\n    return await fetch(`${APIBECAS_URL}${becaId}`, {\r\n        method: 'DELETE',\r\n    });\r\n}\r\n\r\nexport async function getBecas(becaId){\r\n    return await fetch(`${APIBECAS_URL}${becaId}`);\r\n}\r\n\r\n"],"mappings":";AAAA,IAAMA,YAAY,GAAG,mCAArB;AAKA,eAAe,SAAeC,WAAf;EAAA;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA;UAAA,iCAEiBC,KAAK,MAAIF,YAAJ,CAFtB;;QAAA;UAEDG,SAFC;UAAA;UAAA,iCAGYA,SAAS,CAACC,IAAV,EAHZ;;QAAA;UAGDC,IAHC;UAAA,iCAKAA,IAAI,CAACC,KALL;;QAAA;UAAA;UAAA;UAOPC,MAAM,CAACC,KAAP;;QAPO;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;AAWf,OAAO,SAAeC,aAAf,CAA6BC,OAA7B;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA,iCACUR,KAAK,CAACF,YAAD,EAAe;YAC7BW,MAAM,EAAE,MADqB;YAE7BC,OAAO,EAAC;cACJ,gBAAgB;YADZ,CAFqB;YAK7BC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;cACjB,UAAUC,MAAM,CAACN,OAAO,CAACO,MAAT,CADC;cAEjB,cAAcP,OAAO,CAACQ,UAFL;cAGjB,QAAQF,MAAM,CAACN,OAAO,CAACS,IAAT,CAHG;cAIjB,eAAeH,MAAM,CAACN,OAAO,CAACU,WAAT,CAJJ;cAKjB,kBAAkBJ,MAAM,CAACN,OAAO,CAACW,cAAT;YALP,CAAf;UALuB,CAAf,CADf;;QAAA;UAAA;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;AAiBP,OAAO,SAAeC,WAAf,CAA2BC,MAA3B,EAAkCC,WAAlC;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA,iCACUtB,KAAK,MAAIF,YAAJ,GAAmBuB,MAAnB,EAA6B;YAC3CZ,MAAM,EAAE,KADmC;YAE3CC,OAAO,EAAC;cACJ,gBAAgB;YADZ,CAFmC;YAK3CC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;cACjB,UAAUC,MAAM,CAACQ,WAAW,CAACP,MAAb,CADC;cAEjB,cAAcQ,QAAQ,CAACD,WAAW,CAACN,UAAb,CAFL;cAGjB,QAAQF,MAAM,CAACQ,WAAW,CAACL,IAAb,CAHG;cAIjB,eAAeH,MAAM,CAACQ,WAAW,CAACJ,WAAb,CAJJ;cAKjB,kBAAkBJ,MAAM,CAACQ,WAAW,CAACH,cAAb;YALP,CAAf;UALqC,CAA7B,CADf;;QAAA;UAAA;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;AAiBP,OAAO,SAAeK,UAAf,CAA0BH,MAA1B;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA,iCACUrB,KAAK,MAAIF,YAAJ,GAAmBuB,MAAnB,EAA6B;YAC3CZ,MAAM,EAAE;UADmC,CAA7B,CADf;;QAAA;UAAA;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;AAMP,OAAO,SAAegB,QAAf,CAAwBJ,MAAxB;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA,iCACUrB,KAAK,MAAIF,YAAJ,GAAmBuB,MAAnB,CADf;;QAAA;UAAA;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA"},"metadata":{},"sourceType":"module"}